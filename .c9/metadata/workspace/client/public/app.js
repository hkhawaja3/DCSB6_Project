{"filter":false,"title":"app.js","tooltip":"/client/public/app.js","undoManager":{"mark":69,"position":69,"stack":[[{"start":{"row":0,"column":0},"end":{"row":171,"column":3},"action":"remove","lines":["","// Dependencies","var express = require(\"express\");","var mongojs = require(\"mongojs\");","var bodyParser = require(\"body-parser\");","var logger = require(\"morgan\");","","var app = express();","","// Set the app up with morgan, body-parser, and a static folder","app.use(logger(\"dev\"));","app.use(bodyParser.urlencoded({","  extended: false","}));","app.use(express.static(\"public\"));","","// Database configuration","var databaseUrl = \"email\";","var collections = [\"emails\"];","","// Hook mongojs config to db variable","var db = mongojs(databaseUrl, collections);","","// Log any mongojs errors to console","db.on(\"error\", function(error) {","  console.log(\"Database Error:\", error);","});","","","// Routes","// ======","","// Simple index route","app.get(\"/\", function(req, res) {","  res.send(index.html);","});","","// Handle form submission, save submission to mongo","app.post(\"/submit\", function(req, res) {","  console.log(req.body);","  // Insert the note into the notes collection","  db.email.insert(req.body, function(error, saved) {","    // Log any errors","    if (error) {","      console.log(error);","    }","    // Otherwise, send the note back to the browser","    // This will fire off the success function of the ajax request","    else {","      res.send(saved);","    }","  });","});","","// Retrieve results from mongo","app.get(\"/all\", function(req, res) {","  // Find all notes in the notes collection","  db.email.find({}, function(error, found) {","    // Log any errors","    if (error) {","      console.log(error);","    }","    // Otherwise, send json of the notes back to user","    // This will fire off the success function of the ajax request","    else {","      res.json(found);","    }","  });","});","","// Select just one note by an id","app.get(\"/find/:id\", function(req, res) {","","  // When searching by an id, the id needs to be passed in","  // as (mongojs.ObjectId(IDYOUWANTTOFIND))","","  // Find just one result in the notes collection","  db.email.findOne({","    // Using the id in the url","    \"_id\": mongojs.ObjectId(req.params.id)","  }, function(error, found) {","    // log any errors","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the note to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(found);","      res.send(found);","    }","  });","});","","","// Update just one note by an id","app.post(\"/update/:id\", function(req, res) {","  ","  // When searching by an id, the id needs to be passed in","  // as (mongojs.ObjectId(IDYOUWANTTOFIND))","","  // Update the note that matches the object id","  db.email.update({","    \"_id\": mongojs.ObjectId(req.params.id)","  }, {","    // Set the title, note and modified parameters","    // sent in the req's body.","    $set: {","      \"email\": req.body.email,","      \"modified\": Date.now()","    }","  }, function(error, edited) {","    // Log any errors from mongojs","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(edited);","      res.send(edited);","    }","  });","});","","","// Delete One from the DB","app.get(\"/delete/:id\", function(req, res) {","  // Remove a note using the objectID","  db.email.remove({","    \"_id\": mongojs.ObjectID(req.params.id)","  }, function(error, removed) {","    // Log any errors from mongojs","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(removed);","      res.send(removed);","    }","  });","});","","","// Clear the DB","app.get(\"/clearall\", function(req, res) {","  // Remove every note from the notes collection","  db.email.remove({}, function(error, response) {","    // Log any errors to the console","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(response);","      res.send(response);","    }","  });","});","","","// Listen on port 3000","app.listen(3000, function() {","  console.log(\"App running on port 3000!\");","});"],"id":2},{"start":{"row":0,"column":0},"end":{"row":145,"column":3},"action":"insert","lines":["/* Note Taker (18.2.6)"," * front-end"," * ==================== */","","// Loads results onto the page","function getResults() {","  // Empty any results currently on the page","  $(\"#results\").empty();","  // Grab all of the current notes","  $.getJSON(\"/all\", function(data) {","    // For each note...","    console.log(data);","    for (var i = 0; i < data.length; i++) {","      // ...populate #results with a p-tag that includes the note's title and object id","      $(\"#results\").prepend(\"<p class='dataentry' data-id=\" + data[i]._id + \"> <span class='dataTitle' data-id=\" +","        data[i]._id + \">\" + data[i].email + \"</span><span class=deleter>X</span>\" +data[i].lastname + data[i].firstname + data[i].textarea+\"</p>\");","    }","  });","}","","// Runs the getResults function as soon as the script is executed","getResults();","","// When the #makenew button is clicked","$(document).on(\"click\", \"#submit\", function() {","  // AJAX POST call to the submit route on the server","  // This will take the data from the form and send it to the server","  $.ajax({","    type: \"POST\",","    dataType: \"json\",","    url: \"/submit\",","    data: {","      firstname: $(\"#firstName\").val(),","      lastname: $(\"#lastName\").val(),","      email: $(\"#email\").val(),","      textarea: $(\"#textArea\").val(),","    }","  })","  // If that API call succeeds, add the title and a delete button for the note to the page","  .done(function(data) {","    // Add the title and delete button to the #results section","    $(\"#contactInfo\").prepend(\"<p class='dataentry' data-id=\" + data._id + \"> <span class='dataTitle' data-id=\" +","    data._id + \">\" + \"<p> Name: \" + data.firstname + \" \" + data.lastname + \"</p>\" + \"<p> Email: \" + data.email + \"</p>\" + \"<p> Comments: \" + data.textarea +","    \"</span>\"); ","// Clear the note and title inputs on the page","    $(\"#firstName\").val(\"\");","    $(\"#lastName\").val(\"\");","    $(\"#email\").val(\"\");","    $(\"#textArea\").val(\"\");  ","  }","  );","});","","// When the #clearall button is pressed","$(\"#clearall\").on(\"click\", function() {","  // Make an AJAX GET request to delete the notes from the db","  $.ajax({","    type: \"GET\",","    dataType: \"json\",","    url: \"/clearall\",","    // On a successful call, clear the #results section","    success: function(response) {","      $(\"#results\").empty();","    }","  });","});","","","// When user clicks the deleter button for a note","$(document).on(\"click\", \".deleter\", function() {","  // Save the p tag that encloses the button","  var selected = $(this).parent();","  // Make an AJAX GET request to delete the specific note","  // this uses the data-id of the p-tag, which is linked to the specific note","  $.ajax({","    type: \"GET\",","    url: \"/delete/\" + selected.attr(\"data-id\"),","","    // On successful call","    success: function(response) {","      // Remove the p-tag from the DOM","      selected.remove();","      // Clear the note and title inputs","      $(\"#firstName\").val(\"\");","      $(\"#lastName\").val(\"\");","      $(\"#email\").val(\"\");","      $(\"#textArea\").val(\"\");  ","        // Make sure the #actionbutton is submit (in case it's update)","      $(\"#actionbutton\").html(\"<button id='makenew'>Submit</button>\");","    }","  });","});","","// When user click's on note title, show the note, and allow for updates","$(document).on(\"click\", \".dataTitle\", function() {","  // Grab the element","  var selected = $(this);","  // Make an ajax call to find the note","  // This uses the data-id of the p-tag, which is linked to the specific note","  $.ajax({","    type: \"GET\",","    url: \"/find/\" + selected.attr(\"data-id\"),","    success: function(data) {","      // Fill the inputs with the data that the ajax call collected","      $(\"#textArea\").val(data.textarea);","      $(\"#email\").val(data.email);","      $(\"#firstName\").val(data.firstname);","      $(\"#lastName\").val(data.lastname);","      // Make the #actionbutton an update button, so user can","      // Update the note s/he chooses","      $(\"#actionbutton\").html(\"<button id='updater' data-id='\" + data._id + \"'>Update</button>\");","    }","  });","});","","// When user click's update button, update the specific note","$(document).on(\"click\", \"#updater\", function() {","  // Save the selected element","  var selected = $(this);","  // Make an AJAX POST request","  // This uses the data-id of the update button,","  // which is linked to the specific note title","  // that the user clicked before","  $.ajax({","    type: \"POST\",","    url: \"/update/\" + selected.attr(\"data-id\"),","    dataType: \"json\",","    data: {","      firstname: $(\"#firstName\").val(),","      lastname: $(\"#lastName\").val(),","      email: $(\"#email\").val(),","      textarea: $(\"#textArea\").val(),    },","    // On successful call","    success: function(data) {","      // Clear the inputs","      $(\"#firstName\").val(\"\");","      $(\"#lastName\").val(\"\");","      $(\"#email\").val(\"\");","      $(\"#textArea\").val(\"\");  ","      // Revert action button to submit","      $(\"#actionbutton\").html(\"<button id='makenew'>Submit</button>\");","      // Grab the results from the db again, to populate the DOM","      getResults();","    }","  });","});"]}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"remove","lines":["s"],"id":3}],[{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"remove","lines":["t"],"id":4}],[{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"remove","lines":["l"],"id":5}],[{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"remove","lines":["u"],"id":6}],[{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"remove","lines":["s"],"id":7}],[{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"remove","lines":["e"],"id":8}],[{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"remove","lines":["r"],"id":9}],[{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"insert","lines":["c"],"id":10}],[{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"insert","lines":["o"],"id":11}],[{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"insert","lines":["n"],"id":12}],[{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"insert","lines":["t"],"id":13}],[{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"insert","lines":["a"],"id":14}],[{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"insert","lines":["c"],"id":15}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"insert","lines":["t"],"id":16}],[{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["I"],"id":17}],[{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["n"],"id":18}],[{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"insert","lines":["f"],"id":19}],[{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"insert","lines":["o"],"id":20}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"remove","lines":["s"],"id":21}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"remove","lines":["t"],"id":22}],[{"start":{"row":14,"column":14},"end":{"row":14,"column":15},"action":"remove","lines":["l"],"id":23}],[{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"remove","lines":["u"],"id":24}],[{"start":{"row":14,"column":12},"end":{"row":14,"column":13},"action":"remove","lines":["s"],"id":25}],[{"start":{"row":14,"column":11},"end":{"row":14,"column":12},"action":"remove","lines":["e"],"id":26}],[{"start":{"row":14,"column":11},"end":{"row":14,"column":12},"action":"insert","lines":["c"],"id":27}],[{"start":{"row":14,"column":12},"end":{"row":14,"column":13},"action":"insert","lines":["o"],"id":28}],[{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"insert","lines":["n"],"id":29}],[{"start":{"row":14,"column":14},"end":{"row":14,"column":15},"action":"insert","lines":["t"],"id":30}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["a"],"id":31}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["c"],"id":32}],[{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["t"],"id":33}],[{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["i"],"id":34}],[{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["n"],"id":35}],[{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":["f"],"id":36}],[{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["o"],"id":37}],[{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"remove","lines":["o"],"id":38}],[{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"remove","lines":["f"],"id":39}],[{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"remove","lines":["n"],"id":40}],[{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"remove","lines":["i"],"id":41}],[{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["I"],"id":42}],[{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["n"],"id":43}],[{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":["f"],"id":44}],[{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["o"],"id":45}],[{"start":{"row":26,"column":68},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":46},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":27,"column":2},"end":{"row":27,"column":3},"action":"insert","lines":["c"],"id":47}],[{"start":{"row":27,"column":3},"end":{"row":27,"column":4},"action":"insert","lines":["o"],"id":48}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"insert","lines":["n"],"id":49}],[{"start":{"row":27,"column":5},"end":{"row":27,"column":6},"action":"insert","lines":["s"],"id":50}],[{"start":{"row":27,"column":6},"end":{"row":27,"column":7},"action":"insert","lines":["o"],"id":51}],[{"start":{"row":27,"column":7},"end":{"row":27,"column":8},"action":"insert","lines":["l"],"id":52}],[{"start":{"row":27,"column":8},"end":{"row":27,"column":9},"action":"insert","lines":["e"],"id":53}],[{"start":{"row":27,"column":9},"end":{"row":27,"column":10},"action":"insert","lines":["."],"id":54}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"insert","lines":["l"],"id":55}],[{"start":{"row":27,"column":11},"end":{"row":27,"column":12},"action":"insert","lines":["o"],"id":56}],[{"start":{"row":27,"column":12},"end":{"row":27,"column":13},"action":"insert","lines":["g"],"id":57}],[{"start":{"row":27,"column":13},"end":{"row":27,"column":15},"action":"insert","lines":["()"],"id":58}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":16},"action":"insert","lines":["\"\""],"id":59}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["W"],"id":60}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"insert","lines":["o"],"id":61}],[{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"insert","lines":["r"],"id":62}],[{"start":{"row":27,"column":18},"end":{"row":27,"column":19},"action":"insert","lines":["k"],"id":63}],[{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"insert","lines":["i"],"id":64}],[{"start":{"row":27,"column":20},"end":{"row":27,"column":21},"action":"insert","lines":["n"],"id":65}],[{"start":{"row":27,"column":21},"end":{"row":27,"column":22},"action":"insert","lines":["g"],"id":66}],[{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"insert","lines":["!"],"id":67}],[{"start":{"row":27,"column":25},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":68},{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"remove","lines":["  "],"id":69}],[{"start":{"row":27,"column":25},"end":{"row":28,"column":0},"action":"remove","lines":["",""],"id":70}],[{"start":{"row":0,"column":0},"end":{"row":146,"column":3},"action":"remove","lines":["/* Note Taker (18.2.6)"," * front-end"," * ==================== */","","// Loads results onto the page","function getResults() {","  // Empty any results currently on the page","  $(\"#contactInfo\").empty();","  // Grab all of the current notes","  $.getJSON(\"/all\", function(data) {","    // For each note...","    console.log(data);","    for (var i = 0; i < data.length; i++) {","      // ...populate #results with a p-tag that includes the note's title and object id","      $(\"#rcontactInfo\").prepend(\"<p class='dataentry' data-id=\" + data[i]._id + \"> <span class='dataTitle' data-id=\" +","        data[i]._id + \">\" + data[i].email + \"</span><span class=deleter>X</span>\" +data[i].lastname + data[i].firstname + data[i].textarea+\"</p>\");","    }","  });","}","","// Runs the getResults function as soon as the script is executed","getResults();","","// When the #makenew button is clicked","$(document).on(\"click\", \"#submit\", function() {","  // AJAX POST call to the submit route on the server","  // This will take the data from the form and send it to the server","  console.log(\"Working!\")","  $.ajax({","    type: \"POST\",","    dataType: \"json\",","    url: \"/submit\",","    data: {","      firstname: $(\"#firstName\").val(),","      lastname: $(\"#lastName\").val(),","      email: $(\"#email\").val(),","      textarea: $(\"#textArea\").val(),","    }","  })","  // If that API call succeeds, add the title and a delete button for the note to the page","  .done(function(data) {","    // Add the title and delete button to the #results section","    $(\"#contactInfo\").prepend(\"<p class='dataentry' data-id=\" + data._id + \"> <span class='dataTitle' data-id=\" +","    data._id + \">\" + \"<p> Name: \" + data.firstname + \" \" + data.lastname + \"</p>\" + \"<p> Email: \" + data.email + \"</p>\" + \"<p> Comments: \" + data.textarea +","    \"</span>\"); ","// Clear the note and title inputs on the page","    $(\"#firstName\").val(\"\");","    $(\"#lastName\").val(\"\");","    $(\"#email\").val(\"\");","    $(\"#textArea\").val(\"\");  ","  }","  );","});","","// When the #clearall button is pressed","$(\"#clearall\").on(\"click\", function() {","  // Make an AJAX GET request to delete the notes from the db","  $.ajax({","    type: \"GET\",","    dataType: \"json\",","    url: \"/clearall\",","    // On a successful call, clear the #results section","    success: function(response) {","      $(\"#results\").empty();","    }","  });","});","","","// When user clicks the deleter button for a note","$(document).on(\"click\", \".deleter\", function() {","  // Save the p tag that encloses the button","  var selected = $(this).parent();","  // Make an AJAX GET request to delete the specific note","  // this uses the data-id of the p-tag, which is linked to the specific note","  $.ajax({","    type: \"GET\",","    url: \"/delete/\" + selected.attr(\"data-id\"),","","    // On successful call","    success: function(response) {","      // Remove the p-tag from the DOM","      selected.remove();","      // Clear the note and title inputs","      $(\"#firstName\").val(\"\");","      $(\"#lastName\").val(\"\");","      $(\"#email\").val(\"\");","      $(\"#textArea\").val(\"\");  ","        // Make sure the #actionbutton is submit (in case it's update)","      $(\"#actionbutton\").html(\"<button id='makenew'>Submit</button>\");","    }","  });","});","","// When user click's on note title, show the note, and allow for updates","$(document).on(\"click\", \".dataTitle\", function() {","  // Grab the element","  var selected = $(this);","  // Make an ajax call to find the note","  // This uses the data-id of the p-tag, which is linked to the specific note","  $.ajax({","    type: \"GET\",","    url: \"/find/\" + selected.attr(\"data-id\"),","    success: function(data) {","      // Fill the inputs with the data that the ajax call collected","      $(\"#textArea\").val(data.textarea);","      $(\"#email\").val(data.email);","      $(\"#firstName\").val(data.firstname);","      $(\"#lastName\").val(data.lastname);","      // Make the #actionbutton an update button, so user can","      // Update the note s/he chooses","      $(\"#actionbutton\").html(\"<button id='updater' data-id='\" + data._id + \"'>Update</button>\");","    }","  });","});","","// When user click's update button, update the specific note","$(document).on(\"click\", \"#updater\", function() {","  // Save the selected element","  var selected = $(this);","  // Make an AJAX POST request","  // This uses the data-id of the update button,","  // which is linked to the specific note title","  // that the user clicked before","  $.ajax({","    type: \"POST\",","    url: \"/update/\" + selected.attr(\"data-id\"),","    dataType: \"json\",","    data: {","      firstname: $(\"#firstName\").val(),","      lastname: $(\"#lastName\").val(),","      email: $(\"#email\").val(),","      textarea: $(\"#textArea\").val(),    },","    // On successful call","    success: function(data) {","      // Clear the inputs","      $(\"#firstName\").val(\"\");","      $(\"#lastName\").val(\"\");","      $(\"#email\").val(\"\");","      $(\"#textArea\").val(\"\");  ","      // Revert action button to submit","      $(\"#actionbutton\").html(\"<button id='makenew'>Submit</button>\");","      // Grab the results from the db again, to populate the DOM","      getResults();","    }","  });","});"],"id":71},{"start":{"row":0,"column":0},"end":{"row":146,"column":0},"action":"insert","lines":["/* Note Taker (18.2.6)"," * front-end"," * ==================== */","","// Loads results onto the page","function getResults() {","  // Empty any results currently on the page","  $(\"#results\").empty();","  // Grab all of the current notes","  $.getJSON(\"/all\", function(data) {","    // For each note...","    console.log(data);","    for (var i = 0; i < data.length; i++) {","      // ...populate #results with a p-tag that includes the note's title and object id","      $(\"#results\").prepend(\"<p class='dataentry' data-id=\" + data[i]._id + \"> <span class='dataTitle' data-id=\" +","        data[i]._id + \">\" + data[i].email + \"</span><span class=deleter>X</span>\" +data[i].lastname + data[i].firstname + data[i].textarea+\"</p>\");","    }","  });","}","","// Runs the getResults function as soon as the script is executed","getResults();","","// When the #makenew button is clicked","$(document).on(\"click\", \"#submit\", function() {","  // AJAX POST call to the submit route on the server","  // This will take the data from the form and send it to the server","  $.ajax({","    type: \"POST\",","    dataType: \"json\",","    url: \"/submit\",","    data: {","      firstname: $(\"#firstName\").val(),","      lastname: $(\"#lastName\").val(),","      email: $(\"#email\").val(),","      textarea: $(\"#textArea\").val(),","    }","  })","  // If that API call succeeds, add the title and a delete button for the note to the page","  .done(function(data) {","    // Add the title and delete button to the #results section","    $(\"#contactInfo\").prepend(\"<p class='dataentry' data-id=\" + data._id + \"> <span class='dataTitle' data-id=\" +","    data._id + \">\" + \"<p> Name: \" + data.firstname + \" \" + data.lastname + \"</p>\" + \"<p> Email: \" + data.email + \"</p>\" + \"<p> Comments: \" + data.textarea +","    \"</span>\"); ","// Clear the note and title inputs on the page","    $(\"#firstName\").val(\"\");","    $(\"#lastName\").val(\"\");","    $(\"#email\").val(\"\");","    $(\"#textArea\").val(\"\");  ","  }","  );","});","","// When the #clearall button is pressed","$(\"#clearall\").on(\"click\", function() {","  // Make an AJAX GET request to delete the notes from the db","  $.ajax({","    type: \"GET\",","    dataType: \"json\",","    url: \"/clearall\",","    // On a successful call, clear the #results section","    success: function(response) {","      $(\"#contactInfo\").empty();","    }","  });","});","","","// When user clicks the deleter button for a note","$(document).on(\"click\", \".deleter\", function() {","  // Save the p tag that encloses the button","  var selected = $(this).parent();","  // Make an AJAX GET request to delete the specific note","  // this uses the data-id of the p-tag, which is linked to the specific note","  $.ajax({","    type: \"GET\",","    url: \"/delete/\" + selected.attr(\"data-id\"),","","    // On successful call","    success: function(response) {","      // Remove the p-tag from the DOM","      selected.remove();","      // Clear the note and title inputs","      $(\"#firstName\").val(\"\");","      $(\"#lastName\").val(\"\");","      $(\"#email\").val(\"\");","      $(\"#textArea\").val(\"\");  ","        // Make sure the #actionbutton is submit (in case it's update)","      $(\"#actionbutton\").html(\"<button id='submit'>Submit</button>\");","    }","  });","});","","// When user click's on note title, show the note, and allow for updates","$(document).on(\"click\", \".dataTitle\", function() {","  // Grab the element","  var selected = $(this);","  // Make an ajax call to find the note","  // This uses the data-id of the p-tag, which is linked to the specific note","  $.ajax({","    type: \"GET\",","    url: \"/find/\" + selected.attr(\"data-id\"),","    success: function(data) {","      // Fill the inputs with the data that the ajax call collected","      $(\"#textArea\").val(data.textarea);","      $(\"#email\").val(data.email);","      $(\"#firstName\").val(data.firstname);","      $(\"#lastName\").val(data.lastname);","      // Make the #actionbutton an update button, so user can","      // Update the note s/he chooses","      $(\"#submit\").html(\"<button id='updater' data-id='\" + data._id + \"'>Update</button>\");","    }","  });","});","","// When user click's update button, update the specific note","$(document).on(\"click\", \"#updater\", function() {","  // Save the selected element","  var selected = $(this);","  // Make an AJAX POST request","  // This uses the data-id of the update button,","  // which is linked to the specific note title","  // that the user clicked before","  $.ajax({","    type: \"POST\",","    url: \"/update/\" + selected.attr(\"data-id\"),","    dataType: \"json\",","    data: {","      firstname: $(\"#firstName\").val(),","      lastname: $(\"#lastName\").val(),","      email: $(\"#email\").val(),","      textarea: $(\"#textArea\").val(),    },","    // On successful call","    success: function(data) {","      // Clear the inputs","      $(\"#firstName\").val(\"\");","      $(\"#lastName\").val(\"\");","      $(\"#email\").val(\"\");","      $(\"#textArea\").val(\"\");  ","      // Revert action button to submit","      $(\"#submit\").html(\"<button id='makenew'>Submit</button>\");","      // Grab the results from the db again, to populate the DOM","      getResults();","    }","  });","});",""]}]]},"ace":{"folds":[],"scrolltop":1507,"scrollleft":0,"selection":{"start":{"row":120,"column":48},"end":{"row":120,"column":48},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":106,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1512010263870,"hash":"86ba4df6666bb48548c8c6d91c1e7dc996ee33e5"}