{"filter":false,"title":"server.js","tooltip":"/server.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":34,"column":21},"end":{"row":34,"column":22},"action":"remove","lines":["m"],"id":170}],[{"start":{"row":34,"column":20},"end":{"row":34,"column":21},"action":"remove","lines":["t"],"id":171}],[{"start":{"row":34,"column":19},"end":{"row":34,"column":20},"action":"remove","lines":["h"],"id":172}],[{"start":{"row":34,"column":18},"end":{"row":34,"column":19},"action":"remove","lines":["."],"id":173}],[{"start":{"row":34,"column":17},"end":{"row":34,"column":18},"action":"remove","lines":["t"],"id":174}],[{"start":{"row":34,"column":16},"end":{"row":34,"column":17},"action":"remove","lines":["c"],"id":175}],[{"start":{"row":34,"column":15},"end":{"row":34,"column":16},"action":"remove","lines":["a"],"id":176}],[{"start":{"row":34,"column":14},"end":{"row":34,"column":15},"action":"remove","lines":["t"],"id":177}],[{"start":{"row":34,"column":13},"end":{"row":34,"column":14},"action":"remove","lines":["n"],"id":178}],[{"start":{"row":34,"column":12},"end":{"row":34,"column":13},"action":"remove","lines":["o"],"id":179}],[{"start":{"row":34,"column":11},"end":{"row":34,"column":12},"action":"remove","lines":["c"],"id":180}],[{"start":{"row":34,"column":11},"end":{"row":34,"column":42},"action":"insert","lines":["__dirname + \"/views/index2.html"],"id":181}],[{"start":{"row":34,"column":36},"end":{"row":34,"column":37},"action":"remove","lines":["2"],"id":182}],[{"start":{"row":34,"column":35},"end":{"row":34,"column":36},"action":"remove","lines":["x"],"id":183}],[{"start":{"row":34,"column":34},"end":{"row":34,"column":35},"action":"remove","lines":["e"],"id":184}],[{"start":{"row":34,"column":33},"end":{"row":34,"column":34},"action":"remove","lines":["d"],"id":185}],[{"start":{"row":34,"column":32},"end":{"row":34,"column":33},"action":"remove","lines":["n"],"id":186}],[{"start":{"row":34,"column":31},"end":{"row":34,"column":32},"action":"remove","lines":["i"],"id":187}],[{"start":{"row":34,"column":31},"end":{"row":34,"column":32},"action":"insert","lines":["c"],"id":188}],[{"start":{"row":34,"column":32},"end":{"row":34,"column":33},"action":"insert","lines":["o"],"id":189}],[{"start":{"row":34,"column":33},"end":{"row":34,"column":34},"action":"insert","lines":["n"],"id":190}],[{"start":{"row":34,"column":34},"end":{"row":34,"column":35},"action":"insert","lines":["t"],"id":191}],[{"start":{"row":34,"column":35},"end":{"row":34,"column":36},"action":"insert","lines":["a"],"id":192}],[{"start":{"row":34,"column":36},"end":{"row":34,"column":37},"action":"insert","lines":["c"],"id":193}],[{"start":{"row":34,"column":37},"end":{"row":34,"column":38},"action":"insert","lines":["t"],"id":194}],[{"start":{"row":34,"column":29},"end":{"row":34,"column":30},"action":"remove","lines":["s"],"id":195}],[{"start":{"row":34,"column":28},"end":{"row":34,"column":29},"action":"remove","lines":["w"],"id":196}],[{"start":{"row":34,"column":27},"end":{"row":34,"column":28},"action":"remove","lines":["e"],"id":197}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"remove","lines":["i"],"id":198}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"remove","lines":["v"],"id":199}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"insert","lines":["o"],"id":200}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"insert","lines":["u"],"id":201}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"remove","lines":["u"],"id":202}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"remove","lines":["o"],"id":203}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"insert","lines":["p"],"id":204}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"insert","lines":["u"],"id":205}],[{"start":{"row":34,"column":27},"end":{"row":34,"column":28},"action":"insert","lines":["b"],"id":206}],[{"start":{"row":34,"column":28},"end":{"row":34,"column":29},"action":"insert","lines":["l"],"id":207}],[{"start":{"row":34,"column":29},"end":{"row":34,"column":30},"action":"insert","lines":["i"],"id":208}],[{"start":{"row":34,"column":30},"end":{"row":34,"column":31},"action":"insert","lines":["c"],"id":209}],[{"start":{"row":34,"column":30},"end":{"row":34,"column":31},"action":"remove","lines":["c"],"id":210}],[{"start":{"row":34,"column":29},"end":{"row":34,"column":30},"action":"remove","lines":["i"],"id":211}],[{"start":{"row":34,"column":28},"end":{"row":34,"column":29},"action":"remove","lines":["l"],"id":212}],[{"start":{"row":34,"column":27},"end":{"row":34,"column":28},"action":"remove","lines":["b"],"id":213}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"remove","lines":["u"],"id":214}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"remove","lines":["p"],"id":215}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"remove","lines":["/"],"id":216}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"remove","lines":["/"],"id":217}],[{"start":{"row":14,"column":30},"end":{"row":14,"column":31},"action":"remove","lines":["/"],"id":218}],[{"start":{"row":14,"column":29},"end":{"row":14,"column":30},"action":"remove","lines":["t"],"id":219}],[{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"remove","lines":["n"],"id":220}],[{"start":{"row":14,"column":27},"end":{"row":14,"column":28},"action":"remove","lines":["e"],"id":221}],[{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"remove","lines":["i"],"id":222}],[{"start":{"row":14,"column":32},"end":{"row":14,"column":33},"action":"remove","lines":["\""],"id":223}],[{"start":{"row":14,"column":31},"end":{"row":14,"column":32},"action":"remove","lines":["c"],"id":224}],[{"start":{"row":14,"column":30},"end":{"row":14,"column":31},"action":"remove","lines":["i"],"id":225}],[{"start":{"row":14,"column":29},"end":{"row":14,"column":30},"action":"remove","lines":["l"],"id":226}],[{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"remove","lines":["b"],"id":227}],[{"start":{"row":14,"column":27},"end":{"row":14,"column":28},"action":"remove","lines":["u"],"id":228}],[{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"remove","lines":["p"],"id":229}],[{"start":{"row":14,"column":25},"end":{"row":14,"column":26},"action":"remove","lines":["l"],"id":230}],[{"start":{"row":14,"column":24},"end":{"row":14,"column":25},"action":"remove","lines":["c"],"id":231}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"remove","lines":["\""],"id":232}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":44},"action":"insert","lines":["__dirname + '/public'"],"id":233}],[{"start":{"row":14,"column":44},"end":{"row":14,"column":45},"action":"insert","lines":["\""],"id":234}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"insert","lines":["\""],"id":235}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"remove","lines":["\""],"id":236}],[{"start":{"row":14,"column":44},"end":{"row":14,"column":45},"action":"remove","lines":["\""],"id":237}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"insert","lines":["/"],"id":238}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"insert","lines":["p"],"id":239}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"insert","lines":["u"],"id":240}],[{"start":{"row":34,"column":27},"end":{"row":34,"column":28},"action":"insert","lines":["b"],"id":241}],[{"start":{"row":34,"column":28},"end":{"row":34,"column":29},"action":"insert","lines":["l"],"id":242}],[{"start":{"row":34,"column":29},"end":{"row":34,"column":30},"action":"insert","lines":["i"],"id":243}],[{"start":{"row":34,"column":30},"end":{"row":34,"column":31},"action":"insert","lines":["c"],"id":244}],[{"start":{"row":34,"column":31},"end":{"row":34,"column":32},"action":"insert","lines":["/"],"id":245}],[{"start":{"row":34,"column":23},"end":{"row":34,"column":24},"action":"remove","lines":["\""],"id":246}],[{"start":{"row":34,"column":23},"end":{"row":34,"column":24},"action":"insert","lines":["'"],"id":247}],[{"start":{"row":34,"column":44},"end":{"row":34,"column":45},"action":"insert","lines":["'"],"id":248}],[{"start":{"row":34,"column":23},"end":{"row":34,"column":24},"action":"insert","lines":["."],"id":250}],[{"start":{"row":34,"column":23},"end":{"row":34,"column":24},"action":"remove","lines":["."],"id":251}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"insert","lines":["."],"id":252}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"remove","lines":["."],"id":253}],[{"start":{"row":34,"column":30},"end":{"row":34,"column":31},"action":"remove","lines":["c"],"id":254}],[{"start":{"row":34,"column":29},"end":{"row":34,"column":30},"action":"remove","lines":["i"],"id":255}],[{"start":{"row":34,"column":28},"end":{"row":34,"column":29},"action":"remove","lines":["l"],"id":256}],[{"start":{"row":34,"column":27},"end":{"row":34,"column":28},"action":"remove","lines":["b"],"id":257}],[{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"remove","lines":["u"],"id":258}],[{"start":{"row":34,"column":25},"end":{"row":34,"column":26},"action":"remove","lines":["p"],"id":259}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"remove","lines":["/"],"id":260}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"remove","lines":["/"],"id":261}],[{"start":{"row":0,"column":0},"end":{"row":172,"column":0},"action":"remove","lines":["","// Dependencies","var express = require(\"express\");","var mongojs = require(\"mongojs\");","var bodyParser = require(\"body-parser\");","var logger = require(\"morgan\");","","var app = express();","","// Set the app up with morgan, body-parser, and a static folder","app.use(logger(\"dev\"));","app.use(bodyParser.urlencoded({","  extended: false","}));","app.use(express.static(__dirname + '/public'));","","// Database configuration","var databaseUrl = \"email\";","var collections = [\"emails\"];","","// Hook mongojs config to db variable","var db = mongojs(databaseUrl, collections);","","// Log any mongojs errors to console","db.on(\"error\", function(error) {","  console.log(\"Database Error:\", error);","});","","","// Routes","// ======","","// Simple index route","app.get(\"/\", function(req, res) {","  res.send(__dirname + 'contact.html');","});","","// Handle form submission, save submission to mongo","app.post(\"/submit\", function(req, res) {","  console.log(req.body);","  // Insert the note into the notes collection","  db.email.insert(req.body, function(error, saved) {","    // Log any errors","    if (error) {","      console.log(error);","    }","    // Otherwise, send the note back to the browser","    // This will fire off the success function of the ajax request","    else {","      res.send(saved);","    }","  });","});","","// Retrieve results from mongo","app.get(\"/all\", function(req, res) {","  // Find all notes in the notes collection","  db.email.find({}, function(error, found) {","    // Log any errors","    if (error) {","      console.log(error);","    }","    // Otherwise, send json of the notes back to user","    // This will fire off the success function of the ajax request","    else {","      res.json(found);","    }","  });","});","","// Select just one note by an id","app.get(\"/find/:id\", function(req, res) {","","  // When searching by an id, the id needs to be passed in","  // as (mongojs.ObjectId(IDYOUWANTTOFIND))","","  // Find just one result in the notes collection","  db.email.findOne({","    // Using the id in the url","    \"_id\": mongojs.ObjectId(req.params.id)","  }, function(error, found) {","    // log any errors","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the note to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(found);","      res.send(found);","    }","  });","});","","","// Update just one note by an id","app.post(\"/update/:id\", function(req, res) {","  ","  // When searching by an id, the id needs to be passed in","  // as (mongojs.ObjectId(IDYOUWANTTOFIND))","","  // Update the note that matches the object id","  db.email.update({","    \"_id\": mongojs.ObjectId(req.params.id)","  }, {","    // Set the title, note and modified parameters","    // sent in the req's body.","    $set: {","      \"email\": req.body.email,","      \"modified\": Date.now()","    }","  }, function(error, edited) {","    // Log any errors from mongojs","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(edited);","      res.send(edited);","    }","  });","});","","","// Delete One from the DB","app.get(\"/delete/:id\", function(req, res) {","  // Remove a note using the objectID","  db.email.remove({","    \"_id\": mongojs.ObjectID(req.params.id)","  }, function(error, removed) {","    // Log any errors from mongojs","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(removed);","      res.send(removed);","    }","  });","});","","","// Clear the DB","app.get(\"/clearall\", function(req, res) {","  // Remove every note from the notes collection","  db.email.remove({}, function(error, response) {","    // Log any errors to the console","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(response);","      res.send(response);","    }","  });","});","","","// Listen on port 3000","app.listen(3000, function() {","  console.log(\"App running on port 3000!\");","});",""],"id":262},{"start":{"row":0,"column":0},"end":{"row":172,"column":3},"action":"insert","lines":["","// Dependencies","var express = require(\"express\");","var mongojs = require(\"mongojs\");","var bodyParser = require(\"body-parser\");","var logger = require(\"morgan\");","var path = require(\"path\");","","var app = express();","","// Set the app up with morgan, body-parser, and a static folder","app.use(logger(\"dev\"));","app.use(bodyParser.urlencoded({","  extended: false","}));","app.use(express.static('client/public'));","","// Database configuration","var databaseUrl = \"email\";","var collections = [\"emails\"];","","// Hook mongojs config to db variable","var db = mongojs(databaseUrl, collections);","","// Log any mongojs errors to console","db.on(\"error\", function(error) {","  console.log(\"Database Error:\", error);","});","","","// Routes","// ======","","// Simple index route","app.get(\"/\", function(req, res) {","  res.sendFile(path.join(__dirname + '/client/public/contact.html'));","});","","// Handle form submission, save submission to mongo","app.post(\"/submit\", function(req, res) {","  console.log(req.body);","  // Insert the note into the notes collection","  db.email.insert(req.body, function(error, saved) {","    // Log any errors","    if (error) {","      console.log(error);","    }","    // Otherwise, send the note back to the browser","    // This will fire off the success function of the ajax request","    else {","      res.send(saved);","    }","  });","});","","// Retrieve results from mongo","app.get(\"/all\", function(req, res) {","  // Find all notes in the notes collection","  db.email.find({}, function(error, found) {","    // Log any errors","    if (error) {","      console.log(error);","    }","    // Otherwise, send json of the notes back to user","    // This will fire off the success function of the ajax request","    else {","      res.json(found);","    }","  });","});","","// Select just one note by an id","app.get(\"/find/:id\", function(req, res) {","","  // When searching by an id, the id needs to be passed in","  // as (mongojs.ObjectId(IDYOUWANTTOFIND))","","  // Find just one result in the notes collection","  db.email.findOne({","    // Using the id in the url","    \"_id\": mongojs.ObjectId(req.params.id)","  }, function(error, found) {","    // log any errors","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the note to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(found);","      res.send(found);","    }","  });","});","","","// Update just one note by an id","app.post(\"/update/:id\", function(req, res) {","  ","  // When searching by an id, the id needs to be passed in","  // as (mongojs.ObjectId(IDYOUWANTTOFIND))","","  // Update the note that matches the object id","  db.email.update({","    \"_id\": mongojs.ObjectId(req.params.id)","  }, {","    // Set the title, note and modified parameters","    // sent in the req's body.","    $set: {","      \"email\": req.body.email,","      \"modified\": Date.now()","    }","  }, function(error, edited) {","    // Log any errors from mongojs","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(edited);","      res.send(edited);","    }","  });","});","","","// Delete One from the DB","app.get(\"/delete/:id\", function(req, res) {","  // Remove a note using the objectID","  db.email.remove({","    \"_id\": mongojs.ObjectID(req.params.id)","  }, function(error, removed) {","    // Log any errors from mongojs","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(removed);","      res.send(removed);","    }","  });","});","","","// Clear the DB","app.get(\"/clearall\", function(req, res) {","  // Remove every note from the notes collection","  db.email.remove({}, function(error, response) {","    // Log any errors to the console","    if (error) {","      console.log(error);","      res.send(error);","    }","    // Otherwise, send the mongojs response to the browser","    // This will fire off the success function of the ajax request","    else {","      console.log(response);","      res.send(response);","    }","  });","});","","","// Listen on port 3000","app.listen(3000, function() {","  console.log(\"App running on port 3000!\");","});"]}],[{"start":{"row":15,"column":41},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":263}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":57},"action":"insert","lines":["app.use(express.static(path.join(__dirname, '/public')));"],"id":264}],[{"start":{"row":16,"column":45},"end":{"row":16,"column":46},"action":"insert","lines":["c"],"id":265}],[{"start":{"row":16,"column":46},"end":{"row":16,"column":47},"action":"insert","lines":["l"],"id":266}],[{"start":{"row":16,"column":47},"end":{"row":16,"column":48},"action":"insert","lines":["i"],"id":267}],[{"start":{"row":16,"column":48},"end":{"row":16,"column":49},"action":"insert","lines":["e"],"id":268}],[{"start":{"row":16,"column":49},"end":{"row":16,"column":50},"action":"insert","lines":["n"],"id":269}],[{"start":{"row":16,"column":50},"end":{"row":16,"column":51},"action":"insert","lines":["t"],"id":270}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":3},"action":"insert","lines":["// "],"id":271}]]},"ace":{"folds":[],"scrolltop":65,"scrollleft":0,"selection":{"start":{"row":15,"column":3},"end":{"row":15,"column":44},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1512011490228,"hash":"fadf481fe8142f61c892e2d454b9a874cc840e3f"}